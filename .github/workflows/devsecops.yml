name: DevSecOps Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write  # <-- REQUIRED to upload SARIF to GitHub dashboard
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions@0.4.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-report.json
        continue-on-error: true

      - name: Upload Snyk report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.json

      - name: Run Semgrep CLI directly
        run: |
          pip install semgrep
          semgrep --config p/default --sarif --output semgrep.sarif
        continue-on-error: true

      - name: Upload Semgrep SARIF to GitHub Dashboard
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      - name: Upload Semgrep report artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep.sarif

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'app:latest'
          format: 'json'
          output: trivy-report.json
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Upload Trivy artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Run tfsec with JSON output
        run: |
          mkdir -p tfsec-output
          docker run --rm -v $(pwd):/src aquasec/tfsec /src/terraform --format json --out /src/tfsec-output/tfsec.json
        continue-on-error: true

      - name: Upload tfsec artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-report
          path: tfsec-output/tfsec.json

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12.2555.0
        with:
          directory: ./terraform
          framework: terraform
          output_format: sarif
          output_file_path: checkov.sarif
          quiet: true
        continue-on-error: true

      - name: Upload Checkov SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif

      - name: Upload Checkov artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov.sarif

  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --omit=dev --audit-level=moderate --json > npm-audit-report.json
        continue-on-error: true

      - name: Upload npm audit report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json
